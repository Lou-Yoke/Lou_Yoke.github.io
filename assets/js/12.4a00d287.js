(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{494:function(t,a,e){"use strict";e.r(a);var r=e(4),_=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"_10分钟弄懂raft算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10分钟弄懂raft算法"}},[t._v("#")]),t._v(" 10分钟弄懂Raft算法")]),t._v(" "),e("p",[t._v("该文章转载自"),e("a",{attrs:{href:"http://www.baidu.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("普通程序员"),e("OutboundLink")],1),e("br"),t._v(" "),e("code",[t._v("分布式系统")]),t._v("在极大提高可用性、容错性的同时，带来了一致性问题（"),e("code",[t._v("CAP理论")]),t._v("）。Raft算法能够解决分布式系统环境下的一致性问题。")]),t._v(" "),e("p",[t._v("我们熟悉的ETCD注册中心就采用了这个算法；你现在看的这篇"),e("code",[t._v("微信公众号文章")]),t._v("，也是保存在基于Raft算法的高可用存储服务器中。")]),t._v(" "),e("p",[t._v("没有耐心看文字，就直接"),e("code",[t._v("拉到第四章")]),t._v("。")]),t._v(" "),e("h2",{attrs:{id:"一、raft算法是什么？"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一、raft算法是什么？"}},[t._v("#")]),t._v(" 一、Raft算法是什么？")]),t._v(" "),e("p",[t._v("过去，Paxos一直是分布式协议的标准，但是Paxos难于理解，更难以实现，Google的分布式锁系统Chubby作为Paxos实现曾经遭遇到很多坑。后来斯坦福大学提出了Raft算法。")]),t._v(" "),e("p",[e("code",[t._v("Raft是")]),t._v("用于管理复制日志的"),e("code",[t._v("一致性算法")]),t._v("。它的效果相当于(multi-)Paxos，跟Paxos一样高效，但结构与Paxos不同。这使得"),e("code",[t._v("Raft比Paxos更容易理解")]),t._v("，也为构建实用系统提供了更好的基础。")]),t._v(" "),e("p",[t._v("下图是斯坦福大学的Diego Ongaro和John Ousterhout在《In Search of an Understandable\nConsensus\nAlgorithm》一文（提出Raft算法的论文）中，依据Raft学习难度的实验数据绘制的。实验对象是斯坦福大学和加州大学伯克利分校的高年级本科生和研究生。这些"),e("code",[t._v("天才也觉得Paxos很难")]),t._v("。所以对于大多数人看不懂Paxos算法是很正常的，看不懂Raft原理也不奇怪。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/bwicjdKXbf3oyBmhMK9ArQbI0QRlD134URRPlqDrFibyXYdMLIkYJp3PN2U0iaoPibDX8SUglATuUJXocWrZnrrwSg/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:""}})]),t._v(" "),e("h2",{attrs:{id:"二、什么是一致性（consensus）"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二、什么是一致性（consensus）"}},[t._v("#")]),t._v(" 二、什么是一致性（Consensus）")]),t._v(" "),e("p",[t._v("一致性是分布式系统"),e("code",[t._v("容错")]),t._v("的"),e("code",[t._v("基本问题")]),t._v("。一致性涉及多个服务器状态（Values）达成一致。 一旦他们就状态做出决定，该决定就是最终决定。\n当大多数服务器可用时，典型的一致性算法会取得进展。例如，即使2台服务器发生故障，5台服务器的集群也可以继续运行。\n如果更多服务器失败，它们将停止进展（但永远不会返回错误的结果）。")]),t._v(" "),e("h2",{attrs:{id:"三、raft算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三、raft算法"}},[t._v("#")]),t._v(" 三、Raft算法")]),t._v(" "),e("p",[t._v("论文Raft算法介绍的章节包括6个部分，了解个大概就行，然后"),e("code",[t._v("拉到本文后边")]),t._v("，有个可操作的游戏"),e("code",[t._v("辅助理解")]),t._v("这个算法。")]),t._v(" "),e("h3",{attrs:{id:"_1、raft基础知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、raft基础知识"}},[t._v("#")]),t._v(" 1、Raft基础知识")]),t._v(" "),e("p",[t._v("Raft集群包含多个服务器，5个服务器是比较典型的，允许系统容忍两个故障。在任何给定时间，每个服务器都处于以下三种状态之一，领导者（Leader），追随者（Follower）或候选人（Candidate）。\n这几个状态见可以相互转换。")]),t._v(" "),e("p",[e("code",[t._v("Leader")]),t._v("：处理所有客户端交互，日志复制等，一般一次只有一个Leader")]),t._v(" "),e("p",[e("code",[t._v("Follower")]),t._v("：类似选民，完全被动")]),t._v(" "),e("p",[e("code",[t._v("Candidate")]),t._v("：类似Proposer律师，可以被选为一个新的领导人")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/bwicjdKXbf3oyBmhMK9ArQbI0QRlD134UV3gWCoxkrrT3Lo6SjRxGsKsQBficKW4ZL1dwCM460qsn5Ar758KXZWw/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:""}})]),t._v(" "),e("h3",{attrs:{id:"_2、选举leader"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2、选举leader"}},[t._v("#")]),t._v(" 2、选举Leader")]),t._v(" "),e("p",[t._v("Raft使用"),e("code",[t._v("心跳机制")]),t._v("来触发领导者选举。 当服务器启动时，它们以Follower的身份开始。\n只要服务器从Leader或Candidate接收到有效的RPC请求，服务器就会保持Follower状态。\nLeader向所有Follower发送定期心跳（不带日志条目的AppendEntries RPC）以保持其权限。\n如果一个Follower在称为选举超时的一段时间内没有接到任何通信，该Follower认为没有可行的领导者并开始选举新的Leader。")]),t._v(" "),e("h3",{attrs:{id:"_3、日志复制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3、日志复制"}},[t._v("#")]),t._v(" 3、日志复制")]),t._v(" "),e("p",[t._v("一旦Leader当选，它就开始为客户请求提供服务。每个客户端请求包含由复制状态机执行的命令。Leader将命令作为新条目附加到其日志，然后并行地向每个其他服务器发出AppendEntries\nRPC以复制条目。当条目被安全地复制时，Leader将条目应用于其状态机并将该执行的结果返回给客户端。如果Follower崩溃或运行缓慢，或者网络数据包丢失，Leader将无限期地重试AppendEntries\nRPC（即使它已经响应客户端），直到所有Follower最终存储所有日志条目。（后边游戏中有个"),e("code",[t._v("request命令")]),t._v("菜单，就是"),e("code",[t._v("模仿客户端请求")]),t._v("的）")]),t._v(" "),e("p",[t._v("除了以上3点，文章还重点描述了"),e("code",[t._v("安全、Follower和Candidate崩溃、时间和可用性")]),t._v("三个方面。")]),t._v(" "),e("h2",{attrs:{id:"四、可视化的raft算法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四、可视化的raft算法"}},[t._v("#")]),t._v(" 四、可视化的Raft算法")]),t._v(" "),e("p",[t._v("github上有一个"),e("code",[t._v("帮助大家理解算法的页面")]),t._v("，地址是"),e("a",{attrs:{href:"https://raft.github.io/raftscope/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://raft.github.io/raftscope/index.html"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("我截了一个运行状态的截图，左侧显示五台服务器，右侧显示日志。")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/bwicjdKXbf3oyBmhMK9ArQbI0QRlD134UuJUUe2YaY8cxWnp3liaStTTrdYRniaZCsnoLssJSuJ359DPEtsgBd2ag/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:""}}),e("br"),t._v("\n在服务器图标上点击"),e("code",[t._v("鼠标右键")]),t._v("会出现操作菜单。操作菜单对应服务节点的状态改变，其中request模拟客户端请求服务器集群执行任务，会在右边产生日志。"),e("br"),t._v(" "),e("img",{attrs:{src:"https://mmbiz.qpic.cn/mmbiz_png/bwicjdKXbf3oyBmhMK9ArQbI0QRlD134UjPqiakMjjIHnyexY4WaXxJJBf5c5wiaGs33WWDpeY3JI9OxjzZQbgMwQ/640?wx_fmt=png&tp=webp&wxfrom=5&wx_lazy=1&wx_co=1",alt:""}}),e("br"),t._v("\n多操作一会，一定能够理解Raft算法是怎么运行的!")]),t._v(" "),e("h2",{attrs:{id:"五、总结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五、总结"}},[t._v("#")]),t._v(" 五、总结")]),t._v(" "),e("p",[t._v("Raft算法具备强一致、高可靠、高可用等优点，具体体现在：")]),t._v(" "),e("p",[t._v("强一致性：虽然所有节点的数据并非实时一致，但Raft算法保证Leader节点的数据最全，同时"),e("code",[t._v("所有请求都由Leader处理")]),t._v("，所以在客户端角度看是强一致性的。")]),t._v(" "),e("p",[t._v("高可靠性：Raft算法保证了Committed的日志不会被修改，State\nMatchine只应用Committed的日志，所以当客户端收到请求成功即代表数据不再改变。Committed日志在大多数节点上冗余存储，"),e("code",[t._v("少于一半的磁盘故障")]),t._v("数据不会丢失。")]),t._v(" "),e("p",[t._v("高可用性：从Raft算法原理可以看出，选举和日志同步都只需要大多数的节点正常互联即可，所以少量节点故障或网络异常不会影响系统的可用性。即使Leader故障，在选举超时到期后，集群自发选举新Leader，无需人工干预，不可用时间极小。但"),e("code",[t._v("Leader故障时")]),t._v("存在重复数据问题，需要"),e("code",[t._v("业务去重或幂等性")]),t._v("保证。")]),t._v(" "),e("p",[t._v("高性能：与必须将数据写到所有节点才能返回客户端成功的算法相比，Raft算法只需要大多数节点成功即可，少量节点处理缓慢不会延缓整体系统运行。")])])}),[],!1,null,null,null);a.default=_.exports}}]);