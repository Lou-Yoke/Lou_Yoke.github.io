(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{495:function(t,v,_){"use strict";_.r(v);var e=_(4),o=Object(e.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("p",[t._v("title: Dubbo 图文详解\ntags:")]),t._v(" "),_("ul",[_("li",[t._v("dubbo\noriginContent: ''\ntoc: true\ndate: 2020-06-04 14:33:53\nsidebar: auto\nsidebarDepth: 2\nprev: true\nnext: true")])]),t._v(" "),_("h1",{attrs:{id:"dubbo-图文详解"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dubbo-图文详解"}},[t._v("#")]),t._v(" Dubbo 图文详解")]),t._v(" "),_("blockquote",[_("p",[t._v("分布式应用场景有高并发，高可扩展和高性能的要求。还涉及到，序列化/反序列化，网络，多线程以及设计模式的问题。幸好Dubbo框架将上述知识进行了封装，让程序员能够把注意力放在业务上。")])]),t._v(" "),_("h2",{attrs:{id:"dubbo分层"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dubbo分层"}},[t._v("#")]),t._v(" Dubbo分层")]),t._v(" "),_("p",[t._v("Dubbo是一款高性能Java RPC框架。它实现了面向接口代理的RPC调用，服务注册和发现，负载均衡，容错，扩展性等等功能。")]),t._v(" "),_("p",[t._v("Dubbo大致上分为三层，分别是：")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("业务层")])]),t._v(" "),_("li",[_("p",[t._v("RPC层")])]),t._v(" "),_("li",[_("p",[t._v("Remoting层")]),t._v(" "),_("p",[t._v("![DUBBO分层](/Users/lupengfei/Library/Mobile Documents/com~apple~CloudDocs/myblog/docs/image/DUBBO分层-1258109.png)")])])]),t._v(" "),_("p",[t._v("从上图可以看到，三层结构中包含了Dubbo的核心组件。他们的基本功能如下，对于比较常用的组件，会在后面的篇幅中详细讲解。")]),t._v(" "),_("table",[_("thead",[_("tr",[_("th",[t._v("组件名称")]),t._v(" "),_("th",[t._v("描述")])])]),t._v(" "),_("tbody",[_("tr",[_("td",[t._v("Service")]),t._v(" "),_("td",[t._v("业务层，业务代码的实现，应用开发者工作在这一层")])]),t._v(" "),_("tr",[_("td",[t._v("Config")]),t._v(" "),_("td",[t._v("配置层，用来初始化配置信息，用来管理Dubbo的配置")])]),t._v(" "),_("tr",[_("td",[t._v("Proxy")]),t._v(" "),_("td",[t._v("代理层，Dubbo中生产者（Provider）和消费者（Consumer）都会生成Proxy，它用来调用远程接口，就像调用本地接口一样。使得调用透明。")])]),t._v(" "),_("tr",[_("td",[t._v("Registry")]),t._v(" "),_("td",[t._v("注册层，负责框架的服务注册和发现")])]),t._v(" "),_("tr",[_("td",[t._v("Cluster")]),t._v(" "),_("td",[t._v("集群容错层，负责远程调用的容错策略，负载均衡策略以及路由策略。")])]),t._v(" "),_("tr",[_("td",[t._v("Monitor")]),t._v(" "),_("td",[t._v("监控层，负责监控调用次数和调用时间")])]),t._v(" "),_("tr",[_("td",[t._v("Protocol")]),t._v(" "),_("td",[t._v("远程调用层，封装调用的具体过程")])]),t._v(" "),_("tr",[_("td",[t._v("Exchange")]),t._v(" "),_("td",[t._v("信息交换层，建立Request-Response模型，分装请求相应模式。例如：转化同步请求为异步请求。")])]),t._v(" "),_("tr",[_("td",[t._v("Transport")]),t._v(" "),_("td",[t._v("网络传输层，Dubbo将网络传输封装成统一接口，可以在这之上扩展更多的网络传输方式")])]),t._v(" "),_("tr",[_("td",[t._v("Serialize")]),t._v(" "),_("td",[t._v("序列化层，负责网络传输的序列化和反序列化")])])])]),t._v(" "),_("p",[t._v("这里将这些组件罗列出来，能有一个感性的认识。具体开发的时候，知道运用那些组件。")])])}),[],!1,null,null,null);v.default=o.exports}}]);