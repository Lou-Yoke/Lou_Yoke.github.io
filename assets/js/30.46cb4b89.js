(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{511:function(e,n,r){"use strict";r.r(n);var t=r(4),i=Object(t.a)({},(function(){var e=this,n=e.$createElement,r=e._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"redistemplate-api使用记载"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#redistemplate-api使用记载"}},[e._v("#")]),e._v(" RedisTemplate Api使用记载")]),e._v(" "),r("h2",{attrs:{id:"背景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[e._v("#")]),e._v(" 背景")]),e._v(" "),r("p",[e._v("最近在做redis缓存，之前也用过，但是都是瞎用，感觉也好麻烦，所以看看是否有简单点的，顺便记载下载，专门用来写Spring-data-\nredis中的RedisTemplate api使用。")]),e._v(" "),r("h2",{attrs:{id:"问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#问题"}},[e._v("#")]),e._v(" 问题")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("最近做token的验证，那么token就有有效期的问题存在，对于有效期的问题，每次都是将token当作key,value就是userid_time_,代表其他根据自己需求进行。")])]),e._v(" "),r("li",[r("p",[e._v("实现")]),e._v(" "),r("p",[e._v("import java.util.concurrent.TimeUnit;"),r("br"),e._v("\nimport javax.annotation.Resource;"),r("br"),e._v("\nimport org.springframework.data.redis.core.RedisTemplate;"),r("br"),e._v("\npublic class RedisServer {"),r("br"),e._v('\n@Resource(name = "redisTemplate")'),r("br"),e._v("\nRedisTemplate<String, Object> redisTemplate;"),r("br"),e._v("\n/**"),r("br"),e._v("\n* 获取缓存的地址"),r("br"),e._v("\n* @param cacheKey"),r("br"),e._v("\n* @return"),r("br"),e._v("\n*/"),r("br"),e._v("\npublic String getCacheValue(String cacheKey){"),r("br"),e._v("\nString cacheValue=(String)redisTemplate.opsForValue().get(cacheKey);"),r("br"),e._v("\nreturn cacheValue;"),r("br"),e._v("\n}")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v('/**  \n * 设置缓存值  \n * @param key  \n * @param value  \n */  \npublic void setCacheValue(String key,String value){  \n    redisTemplate.opsForValue().set(key, value);  \n}  \n  \n/**  \n * 设置缓存值并设置有效期  \n * @param key  \n * @param value  \n */  \npublic void setCacheValueForTime(String key,String value,long time){  \n    redisTemplate.opsForValue().set(key, value, time, TimeUnit.SECONDS);  \n}  \n  \n/**  \n * 删除key值  \n * @param key  \n */  \npublic void delCacheByKey(String key){  \n    redisTemplate.opsForValue().getOperations().delete(key);  \n    redisTemplate.opsForHash().delete("");  \n}  \n  \n/**  \n * 获取token的有效期  \n * @param key  \n */  \npublic long getExpireTime(String key){  \n    long time = redisTemplate.getExpire(key);  \n    return time;  \n}  \n  \n/**  \n * 指定时间类型---秒  \n * @param key  \n * @return  \n */  \npublic long getExpireTimeType(String key){  \n    long time = redisTemplate.getExpire(key,TimeUnit.SECONDS);  \n    return time;  \n}  \n  \n/**  \n *   \n * @param key---分  \n * @return  \n */  \npublic long getExpireTimeTypeForMin(String key){  \n    long time = redisTemplate.getExpire(key,TimeUnit.MINUTES);  \n    return time;  \n}  \n  \n/**  \n * 设置一个自增的数据  \n * @param key  \n * @param growthLength  \n */  \npublic void testInc(String key,Long growthLength){  \n    redisTemplate.opsForValue().increment(key, growthLength);  \n}  \n')])])])])]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("}  \n")])])]),r("p",[e._v("自己生成token后，将value=userid_time当作key,r然后使用上述的")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",[r("code",[e._v("public void setCacheValueForTime(String key,String value,long time);  \n")])])]),r("p",[e._v("来缓存，其中time我设置的类型是秒。")]),e._v(" "),r("p",[e._v("然后在做验证的时候根据token取出value,再按照”_”进行拆分取到时间,在对时间跟当前时间做对比。")]),e._v(" "),r("p",[e._v("所以这样做是否很麻烦了,当然麻烦了，所以既然我设置了过期时间,那么我是否还可以拿到这个token还剩下多久时间过期"),r("br"),e._v("\n![](https://upload-\nimages.jianshu.io/upload_images/1456372-143bfcb7e1cefe12.png?imageMogr2/auto-\norient/strip%7CimageView2/2/w/1000/format/webp)")]),e._v(" "),r("p",[e._v("在其API中看到这两个方法,所以就有了上面的")]),e._v(" "),r("p",[e._v("​"),r("br"),e._v("\n​    public long getExpireTime(String key){"),r("br"),e._v("\n​             long time = redisTemplate.getExpire(key);"),r("br"),e._v("\n​             return time;"),r("br"),e._v("\n​         }"),r("br"),e._v("\n​        /*"),r("em",[e._v("指定秒")]),e._v("/"),r("br"),e._v("\n​         public long getExpireTimeType(String key){"),r("br"),e._v("\n​             long time = redisTemplate.getExpire(key,TimeUnit.SECONDS);"),r("br"),e._v("\n​             return time;"),r("br"),e._v("\n​         }"),r("br"),e._v("\n​    /*"),r("em",[e._v("指定分钟")]),e._v("/"),r("br"),e._v("\n​       public long getExpireTimeTypeForMin(String key){"),r("br"),e._v("\n​             long time = redisTemplate.getExpire(key,TimeUnit.MINUTES);"),r("br"),e._v("\n​             return time;"),r("br"),e._v("\n​         }")]),e._v(" "),r("p",[e._v("一个是获取有效时间，一个是可以指定时间类型返回。")]),e._v(" "),r("p",[e._v("下面是我做的测试,我设置token的有效期是30分钟也就是1800秒,前面timeTypeMin是指定分钟返回的数据，time是getExpireTime(String\nkey)返回数据,timeType是指定秒返回的数据。")]),e._v(" "),r("p",[e._v("​")]),e._v(" "),r("p",[e._v("​"),r("br"),e._v("\n​    {"),r("br"),e._v("\n​"),r("br"),e._v('\n​      "resultCode": "00000",'),r("br"),e._v('\n​      "resultMsg": "SUCCESS",'),r("br"),e._v('\n​      "resultMap": {'),r("br"),e._v('\n​        "result": {'),r("br"),e._v('\n​          "timeTypeMin": 6,'),r("br"),e._v('\n​          "time": 396,'),r("br"),e._v('\n​          "timeType": 395'),r("br"),e._v("\n​        }"),r("br"),e._v("\n​      }"),r("br"),e._v("\n​    }")]),e._v(" "),r("ol",[r("li",[e._v("在linux上查看的方式"),r("br"),e._v("\n可以使用ttl key看到剩余时间，如果该key已经过期，将返回”-2”"),r("br"),e._v("\n![](https://upload-\nimages.jianshu.io/upload_images/1456372-add8e099368a5d24.png?imageMogr2/auto-\norient/strip%7CimageView2/2/w/610/format/webp)")])]),e._v(" "),r("p",[e._v("​"),r("br"),e._v("\n​    代码测试返回结果如下：getExpire的方法返回-2,其他返回都是0"),r("br"),e._v("\n​    {"),r("br"),e._v('\n​      "resultCode": "00000",'),r("br"),e._v('\n​      "resultMsg": "SUCCESS",'),r("br"),e._v('\n​      "resultMap": {'),r("br"),e._v('\n​        "result": {'),r("br"),e._v('\n​          "timeTypeMin": 0,'),r("br"),e._v('\n​          "time": -2,'),r("br"),e._v('\n​          "timeType": 0'),r("br"),e._v("\n​        }"),r("br"),e._v("\n​      }"),r("br"),e._v("\n​    }")]),e._v(" "),r("ol",[r("li",[r("p",[e._v("有关incr的用法"),r("br"),e._v("\n在生成token的时候我有考虑使用一串随机数然后在加上一个字增的数据,在redis中可以使用incr的方式实现，那么在redisTemplate的实现方式")]),e._v(" "),r("p",[e._v("public void testInc(String key,Long growthLength){"),r("br"),e._v("\nredisTemplate.opsForValue().increment(key, growthLength);"),r("br"),e._v("\n}")])])])])}),[],!1,null,null,null);n.default=i.exports}}]);