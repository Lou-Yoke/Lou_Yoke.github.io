(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{510:function(e,r,t){"use strict";t.r(r);var n=t(4),a=Object(n.a)({},(function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"spring-boot配置发送email"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#spring-boot配置发送email"}},[e._v("#")]),e._v(" Spring Boot配置发送Email")]),e._v(" "),t("h2",{attrs:{id:"引入依赖"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#引入依赖"}},[e._v("#")]),e._v(" 引入依赖")]),e._v(" "),t("p",[e._v("在pom.xml文件中引入邮件配置：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v("<dependency>  \n    <groupId>org.springframework.boot</groupId>  \n    <artifactId>spring-boot-starter-mail</artifactId>  \n</dependency>  \n")])])]),t("p",[e._v("配置文件application.properies")]),e._v(" "),t("p",[e._v("​"),t("br"),e._v("\n​"),t("br"),e._v("\n​    # javaMailSender邮件发送的配置"),t("br"),e._v("\n​    email.host=smtp.qq.com"),t("br"),e._v("\n​    email.transport.protocol=smtp"),t("br"),e._v("\n​    email.port=25"),t("br"),e._v("\n​    email.username=用户邮箱"),t("br"),e._v("\n​    email.password=邮箱密码"),t("br"),e._v("\n​    email.title=yoke-blogt"),t("br"),e._v("\n​    mail.smtp.auth=true"),t("br"),e._v("\n​    mail.smtp.starttls.enable=true"),t("br"),e._v("\n​    mail.smtp.starttls.required=true")]),e._v(" "),t("blockquote",[t("p",[t("strong",[e._v("注意")]),e._v(" 由于现在有限对自身的保护，无法使用通常密码进行登陆，例如qq邮箱，应该使用邮箱官方授权码才能够登陆。")])]),e._v(" "),t("p",[e._v("QQ邮箱->设置->账户->POP3/SMTP服务：开启服务后会获得QQ的授权码"),t("br"),e._v(" "),t("img",{attrs:{src:"https://github.com/yokenuili/yokenuoli.img/blob/master/qqmail.png?raw=true",alt:""}})]),e._v(" "),t("h2",{attrs:{id:"发送简单文本邮件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发送简单文本邮件"}},[e._v("#")]),e._v(" 发送简单文本邮件")]),e._v(" "),t("p",[e._v("贴Java代码：")]),e._v(" "),t("p",[e._v("​"),t("br"),e._v("\n​    @RunEith(SpringRunner.class)"),t("br"),e._v("\n​    @SpringBootTest"),t("br"),e._v('\n​    @ActiveProfiles("QQ")'),t("br"),e._v("\n​    public class EmailTest{"),t("br"),e._v("\n​"),t("br"),e._v("\n​        @Autowired"),t("br"),e._v("\n​        private JavaMailSender mailSender;//自动注入的Bean"),t("br"),e._v("\n​"),t("br"),e._v('\n@Value("${spring.mail.username}")'),t("br"),e._v("\nprivate String Sender;//读取配置文件中的参数")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('    @Test  \n    public void sendSimpleMail() throws Exception{  \n        SimpleMailMessage message = new SimpleMailMessage();  \n        message.setFrom(Sender);  \n        message.setTo(Sender);//i 自己给自己发邮件，预期中的目标邮箱  \n        message.setSubject("主题：简单邮件");  \n        message.setText("测试邮件内容");  \n        mailSender.send(message);  \n    }  \n}  \n')])])]),t("h2",{attrs:{id:"发送html邮件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发送html邮件"}},[e._v("#")]),e._v(" 发送HTML邮件")]),e._v(" "),t("p",[e._v("Java代码：")]),e._v(" "),t("p",[e._v("​"),t("br"),e._v("\n​"),t("br"),e._v("\n​    @Test"),t("br"),e._v("\n​    public void sendHtmlMail() {"),t("br"),e._v("\n​        MimeMessage message = null;"),t("br"),e._v("\n​        try {"),t("br"),e._v("\n​            message = mailSender.createMimeMessage();"),t("br"),e._v("\n​            MimeMessageHelper helper = new MimeMessageHelper(message, true);"),t("br"),e._v("\n​            helper.setFrom(Sender);"),t("br"),e._v("\n​            helper.setTo(Sender);"),t("br"),e._v('\n​            helper.setSubject("标题：发送Html内容");'),t("br"),e._v("\n​"),t("br"),e._v("\n​            StringBuffer sb = new StringBuffer();"),t("br"),e._v('\n​            sb.append("')]),t("h1",[e._v("大标题-h1")]),e._v('")'),t("br"),e._v('\n​                    .append("'),t("p",{staticStyle:{color:"#F00"}},[e._v("红色字")]),e._v('")'),t("br"),e._v('\n​                    .append("'),t("p",{staticStyle:{"text-align":"right"}},[e._v("右对齐")]),e._v('");'),t("br"),e._v("\n​            helper.setText(sb.toString(), true);"),t("br"),e._v("\n​        } catch (Exception e) {"),t("br"),e._v("\n​            e.printStackTrace();"),t("br"),e._v("\n​        }"),t("br"),e._v("\n​        mailSender.send(message);"),t("br"),e._v("\n​    }"),t("p"),e._v(" "),t("h2",{attrs:{id:"发送带附件的邮件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发送带附件的邮件"}},[e._v("#")]),e._v(" 发送带附件的邮件")]),e._v(" "),t("p",[e._v("Java代码：")]),e._v(" "),t("p",[e._v("​"),t("br"),e._v("\n​    @Test"),t("br"),e._v("\n​    public void sendAttachmentsMail() {"),t("br"),e._v("\n​        MimeMessage message = null;"),t("br"),e._v("\n​        try {"),t("br"),e._v("\n​            message = mailSender.createMimeMessage();"),t("br"),e._v("\n​            MimeMessageHelper helper = new MimeMessageHelper(message, true);"),t("br"),e._v("\n​            helper.setFrom(Sender);"),t("br"),e._v("\n​            helper.setTo(Sender);"),t("br"),e._v('\n​            helper.setSubject("主题：带附件的邮件");'),t("br"),e._v('\n​            helper.setText("带附件的邮件内容");'),t("br"),e._v("\n​            //注意项目路径问题，自动补用项目路径"),t("br"),e._v('\n​            FileSystemResource file = new FileSystemResource(new File("src/main/resources/static/image/picture.jpg"));'),t("br"),e._v("\n​            //加入邮件"),t("br"),e._v('\n​            helper.addAttachment("图片.jpg", file);'),t("br"),e._v("\n​        } catch (Exception e){"),t("br"),e._v("\n​            e.printStackTrace();"),t("br"),e._v("\n​        }"),t("br"),e._v("\n​        mailSender.send(message);"),t("br"),e._v("\n​    }")]),e._v(" "),t("h2",{attrs:{id:"发送带静态资源的邮件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发送带静态资源的邮件"}},[e._v("#")]),e._v(" 发送带静态资源的邮件")]),e._v(" "),t("p",[e._v("Java代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('@Test  \npublic void sendInlineMail() {  \n    MimeMessage message = null;  \n    try {  \n        message = mailSender.createMimeMessage();  \n        MimeMessageHelper helper = new MimeMessageHelper(message, true);  \n        helper.setFrom(Sender);  \n        helper.setTo(Sender);  \n        helper.setSubject("主题：带静态资源的邮件");  \n        //第二个参数指定发送的是HTML格式,同时cid:是固定的写法  \n        helper.setText("<html><body>带静态资源的邮件内容 图片:<img src=\'cid:picture\' /></body></html>", true);  \n  \n        FileSystemResource file = new FileSystemResource(new File("src/main/resources/static/image/picture.jpg"));  \n        helper.addInline("picture",file);  \n    } catch (Exception e){  \n        e.printStackTrace();  \n    }  \n    mailSender.send(message);  \n}  \n')])])]),t("h2",{attrs:{id:"发送模板邮件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#发送模板邮件"}},[e._v("#")]),e._v(" 发送模板邮件")]),e._v(" "),t("p",[e._v("在Spring Boot中也能使用模板引擎来实现模板化的邮件发送。关于模板邮件，Spring\nBoot原本是支持Velocity，在1.4版本后又抛弃了velocity，暂时只支持freemaker."),t("br"),e._v("\n引入freemaker依赖：")]),e._v(" "),t("p",[e._v("​"),t("br"),e._v("\n​    "),t("dependency",[t("br"),e._v("\n​        "),t("groupId",[e._v("org.springframework.boot")]),t("br"),e._v("\n​        "),t("artifactId",[e._v("spring-boot-starter-freemarker")]),t("br"),e._v("\n​    ")],1)],1),e._v(" "),t("p",[e._v("java代码：")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[e._v('    @Autowired  \n    private FreeMarkerConfigurer freeMarkerConfigurer;  //自动注入  \n  \n    @Test  \n    public void sendTemplateMail(){  \n        MimeMessage message = null;  \n        try {  \n            message = mailSender.createMimeMessage();  \n            MimeMessageHelper helper = new MimeMessageHelper(message, true);  \n            helper.setFrom(Sender);  \n            helper.setTo(Sender);  \n            helper.setSubject("主题：模板邮件");  \n  \n            Map<String, Object> model = new HashedMap();  \n            model.put("username", "zggdczfr");  \n  \n            //修改 application.properties 文件中的读取路径  \n//            FreeMarkerConfigurer configurer = new FreeMarkerConfigurer();  \n//            configurer.setTemplateLoaderPath("classpath:templates");  \n            //读取 html 模板  \n            Template template = freeMarkerConfigurer.getConfiguration().getTemplate("mail.html");  \n            String html = FreeMarkerTemplateUtils.processTemplateIntoString(template, model);  \n            helper.setText(html, true);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        }  \n        mailSender.send(message);  \n    }  \n')])])]),t("h2",{attrs:{id:"效果截图"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#效果截图"}},[e._v("#")]),e._v(" 效果截图")]),e._v(" "),t("p",[t("img",{attrs:{src:"https://github.com/yokenuili/yokenuoli.img/blob/master/%E6%95%88%E6%9E%9C%E6%88%AA%E5%9B%BE.png?raw=true",alt:""}})])])}),[],!1,null,null,null);r.default=a.exports}}]);