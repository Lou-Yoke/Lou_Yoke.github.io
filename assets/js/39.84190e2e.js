(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{520:function(e,r,o){"use strict";o.r(r);var t=o(4),_=Object(t.a)({},(function(){var e=this,r=e.$createElement,o=e._self._c||r;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"八个docker的真实应用场景"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#八个docker的真实应用场景"}},[e._v("#")]),e._v(" 八个Docker的真实应用场景")]),e._v(" "),o("blockquote",[o("p",[e._v("Flux\n7介绍了常用的8个Docker的真实使用场景，分别是简化配置、代码流水线管理、提高开发效率、隔离应用、整合服务器、调试能力、多租户环境、快速部署。我们一直在谈Docker，Docker怎么使用，在怎么样的场合下使用？也许本文可以帮到你。有需要交流的地方，可以通过评论与我们交流。")])]),e._v(" "),o("p",[o("img",{attrs:{src:"http://dockone.io/uploads/article/20150106/802e00800b6dca3038b072bffdd56e15.png",alt:""}})]),e._v(" "),o("p",[e._v("几周前我们参加了DockerCon\n，Dockercon是首个以Docker为中心的技术大会。它面向开发者以及对在Docker开放平台上构建、交付、运行分布式应用感兴趣的从业者，不论这些开放平台是运行于自用笔记本上或者是数据中心的虚拟机上。我们参加了这次大会，Flux7是Docker基础的系统集成合作伙伴，同时也是演讲嘉宾。")]),e._v(" "),o("p",[e._v("我们的CEO Aater\nSuleman和我们的一位客户一同进行了演讲。虽然DockerCon大会十分有趣，但我觉得大会太关注Docker的具体细节，而忽略了Docker的使用场景。所以，在这篇文章中，我想介绍并分享一些Docker的实际应用案例。")]),e._v(" "),o("p",[e._v("在我们讨论Docker的使用场景之前，先来看看Docker这个工具有什么特别的地方吧。")]),e._v(" "),o("p",[e._v("Docker提供了轻量级的虚拟化，它几乎没有任何额外开销，这个特性非常酷。")]),e._v(" "),o("p",[e._v("首先你在享有Docker带来的虚拟化能力的时候无需担心它带来的额外开销。其次，相比于虚拟机，你可以在同一台机器上创建更多数量的容器。")]),e._v(" "),o("p",[e._v("Docker的另外一个优点是容器的启动与停止都能在几秒中内完成。Docker公司的创始人 Solomon\nHykes曾经介绍过Docker在单纯的LXC之上做了哪些事情，你可以去看看。")]),e._v(" "),o("p",[e._v("下面是我总结的一些Docker的使用场景，它为你展示了如何借助Docker的优势，在低开销的情况下，打造一个一致性的环境。")]),e._v(" "),o("h2",{attrs:{id:"_1-简化配置"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_1-简化配置"}},[e._v("#")]),e._v(" 1. 简化配置")]),e._v(" "),o("p",[e._v("这是Docker公司宣传的Docker的主要使用场景。虚拟机的最大好处是能在你的硬件设施上运行各种配置不一样的平台（软件、系统），Docker在降低额外开销的情况下提供了同样的功能。它能让你将运行环境和配置放在代码中然后部署，同一个Docker的配置可以在不同的环境中使用，这样就降低了硬件要求和应用环境之间耦合度。")]),e._v(" "),o("h2",{attrs:{id:"_2-代码流水线（code-pipeline）管理"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_2-代码流水线（code-pipeline）管理"}},[e._v("#")]),e._v(" 2. 代码流水线（Code Pipeline）管理")]),e._v(" "),o("p",[e._v("前一个场景对于管理代码的流水线起到了很大的帮助。代码从开发者的机器到最终在生产环境上的部署，需要经过很多的中间环境。而每一个中间环境都有自己微小的差别，Docker给应用提供了一个从开发到上线均一致的环境，让代码的流水线变得简单不少。")]),e._v(" "),o("h2",{attrs:{id:"_3-提高开发效率"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_3-提高开发效率"}},[e._v("#")]),e._v(" 3. 提高开发效率")]),e._v(" "),o("p",[e._v("这就带来了一些额外的好处：Docker能提升开发者的开发效率。如果你想看一个详细一点的例子，可以参考Aater在DevOpsDays Austin 2014\n大会或者是DockerCon上的演讲。")]),e._v(" "),o("p",[e._v("不同的开发环境中，我们都想把两件事做好。一是我们想让开发环境尽量贴近生产环境，二是我们想快速搭建开发环境。")]),e._v(" "),o("p",[e._v("理想状态中，要达到第一个目标，我们需要将每一个服务都跑在独立的虚拟机中以便监控生产环境中服务的运行状态。然而，我们却不想每次都需要网络连接，每次重新编译的时候远程连接上去特别麻烦。这就是Docker做的特别好的地方，开发环境的机器通常内存比较小，之前使用虚拟的时候，我们经常需要为开发环境的机器加内存，而现在Docker可以轻易的让几十个服务在Docker中跑起来。")]),e._v(" "),o("h2",{attrs:{id:"_4-隔离应用"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_4-隔离应用"}},[e._v("#")]),e._v(" 4. 隔离应用")]),e._v(" "),o("p",[e._v("有很多种原因会让你选择在一个机器上运行不同的应用，比如之前提到的提高开发效率的场景等。")]),e._v(" "),o("p",[e._v("我们经常需要考虑两点，一是因为要降低成本而进行服务器整合，二是将一个整体式的应用拆分成松耦合的单个服务（译者注：微服务架构）。如果你想了解为什么松耦合的应用这么重要，请参考Steve\nYege的这篇论文，文中将Google和亚马逊做了比较。")]),e._v(" "),o("h2",{attrs:{id:"_5-整合服务器"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_5-整合服务器"}},[e._v("#")]),e._v(" 5. 整合服务器")]),e._v(" "),o("p",[e._v("正如通过虚拟机来整合多个应用，Docker隔离应用的能力使得Docker可以整合多个服务器以降低成本。由于没有多个操作系统的内存占用，以及能在多个实例之间共享没有使用的内存，Docker可以比虚拟机提供更好的服务器整合解决方案。")]),e._v(" "),o("h2",{attrs:{id:"_6-调试能力"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_6-调试能力"}},[e._v("#")]),e._v(" 6. 调试能力")]),e._v(" "),o("p",[e._v("Docker提供了很多的工具，这些工具不一定只是针对容器，但是却适用于容器。它们提供了很多的功能，包括可以为容器设置检查点、设置版本和查看两个容器之间的差别，这些特性可以帮助调试Bug。你可以在《Docker拯救世界》的文章中找到这一点的例证。")]),e._v(" "),o("h2",{attrs:{id:"_7-多租户环境"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_7-多租户环境"}},[e._v("#")]),e._v(" 7. 多租户环境")]),e._v(" "),o("p",[e._v("另外一个Docker有意思的使用场景是在多租户的应用中，它可以避免关键应用的重写。我们一个特别的关于这个场景的例子是为IoT（译者注：物联网）的应用开发一个快速、易用的多租户环境。这种多租户的基本代码非常复杂，很难处理，重新规划这样一个应用不但消耗时间，也浪费金钱。")]),e._v(" "),o("p",[e._v("使用Docker，可以为每一个租户的应用层的多个实例创建隔离的环境，这不仅简单而且成本低廉，当然这一切得益于Docker环境的启动速度和其高效的diff命令。")]),e._v(" "),o("p",[e._v("你可以在这里了解关于此场景的更多信息。")]),e._v(" "),o("h2",{attrs:{id:"_8-快速部署"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#_8-快速部署"}},[e._v("#")]),e._v(" 8. 快速部署")]),e._v(" "),o("p",[e._v("在虚拟机之前，引入新的硬件资源需要消耗几天的时间。虚拟化技术（Virtualization）将这个时间缩短到了分钟级别。而Docker通过为进程仅仅创建一个容器而无需启动一个操作系统，再次将这个过程缩短到了秒级。这正是Google和Facebook都看重的特性。")]),e._v(" "),o("p",[e._v("你可以在数据中心创建销毁资源而无需担心重新启动带来的开销。通常数据中心的资源利用率只有30%，通过使用Docker并进行有效的资源分配可以提高资源的利用率。Vsa")]),e._v(" "),o("p",[e._v("原文链接：[8 Ways to Use Docker in the Real\nWorld](https://blog.flux7.com/blogs/docker/8-ways-to-use-docker-in-the-real-\nworld)（翻译：钟最龙 审校：李颖杰）")])])}),[],!1,null,null,null);r.default=_.exports}}]);